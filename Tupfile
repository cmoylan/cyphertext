#OBJS specifies which files to compile as part of the project
#OBJS = src/Character.cpp src/Level.cpp src/main.cpp
OBJS = src/Util.cpp src/Entity.cpp src/Character.cpp src/Enemy.cpp \
       src/BulletRegistry.cpp src/EnemyAI.cpp src/CollisionManager.cpp \
       src/Background.cpp \
       src/GameUtil.cpp src/GameInput.cpp src/Game.cpp src/Sound.cpp src/main.cpp

#build dir...
BUILD_DIR = build

#INCLUDE_PATHS specifies the additional include paths we'll need
# for linux:
INCLUDE_PATHS = -I/usr/local/include -I/usr/include/SOIL -I/usr/include/GL \
	        -I/usr/local/include/SDL2
# for mac:
#INCLUDE_PATHS = -I/usr/local/include -I/opt/X11/include -I/usr/include/SOIL \
#	         -I/usr/include/GL -I/usr/local/include/SDL2


#LIBRARY_PATHS specifies the additional library paths we'll need
# for linux:
SDL_LIB = `sdl2-config --libs`
LIBRARY_PATHS = -L/usr/local/lib $(SDL_LIB)
# for mac:
#LIBRARY_PATHS = -L/usr/local/lib -L/opt/X11/lib


#COMPILER_FLAGS specifies the additional compilation options we're using
# g 	 - compile with debug information
# Wall 	 - show all compiler warnings
# Wextra - show extra compiler warninres
# std=c++0x - use newer c++ features
COMPILER_FLAGS = -g -Wall -Wextra -std=c++0x $(OPTFLAGS)

#LINKER_FLAGS specifies the libraries we're linking against
# For linux:
LINKER_FLAGS = -lGL -lGLEW -lSDL2 -lSOIL -lSDL2_mixer
SDL_STUFF = `/usr/local/bin/sdl-config --libs --cflags`
#SDL_STUFF = `pkg-config --libs --cflags sdl2`
# For mac:
#LINKER_FLAGS = -framework OpenGL -lSDL2 -lGLEW -lSOIL

#assemble the compiler command
CC = g++ $(INCLUDE_PATHS) $(LIBRARY_PATHS) \
     	 $(COMPILER_FLAGS)


#OBJ_NAME specifies the name of our exectuable
OBJ_NAME = engine

# compile each .cpp file into a .o
: foreach $(OBJS) |> $(CC) -c %f -o %o |> $(BUILD_DIR)/%B.o

# compile and link all .o into the main executable
: $(BUILD_DIR)/*.o |> $(CC) %f -o %o $(LINKER_FLAGS) |> $(OBJ_NAME)
