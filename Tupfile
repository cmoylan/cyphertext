#OBJS specifies which files to compile as part of the project
#OBJS = src/Character.cpp src/Level.cpp src/main.cpp
OBJS = src/Character.cpp src/BulletRegistry.cpp src/main.cpp

#build dir...
BUILD_DIR = build

#INCLUDE_PATHS specifies the additional include paths we'll need
INCLUDE_PATHS = -I/usr/local/include -I/opt/X11/include -I/usr/local/include/SOIL

#LIBRARY_PATHS specifies the additional library paths we'll need
LIBRARY_PATHS = -L/usr/local/lib -L/opt/X11/lib

#COMPILER_FLAGS specifies the additional compilation options we're using
# g 	 - compile with debug information
# Wall 	 - show all compiler warnings
# Wextra - show extra compiler warninres
COMPILER_FLAGS = -g -Wall -Wextra $(OPTFLAGS)

#LINKER_FLAGS specifies the libraries we're linking against
#LINKER_FLAGS = -lGL -lGLU -lglut
#SDL_STUFF = `/usr/local/bin/sdl2-config --libs --cflags`
#SDL_STUFF = `pkg-config --libs --cflags sdl2`
LINKER_FLAGS = -framework OpenGL -lSDL2 -lGLEW -lSOIL

#assemble the compiler command
CC = g++ $(INCLUDE_PATHS) $(LIBRARY_PATHS) \
     	 $(COMPILER_FLAGS)


#OBJ_NAME specifies the name of our exectuable
OBJ_NAME = engine

# compile each .cpp file into a .o
: foreach $(OBJS) |> $(CC) -c %f -o %o |> $(BUILD_DIR)/%B.o

# compile and link all .o into the main executable
: $(BUILD_DIR)/*.o |> $(CC) $(LINKER_FLAGS) %f -o %o |> $(OBJ_NAME)
