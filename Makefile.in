SUBDIRS = src
BUILD_DIR = build
TARGET = engine

SOURCES = $(patsubst src/%,%,$(wildcard src/*.cpp))
OBJECTS = $(patsubst %.cpp,%,$(SOURCES))


starcom_CFLAGS = -I/usr/local/include \
		 -I/usr/include/SOIL \
		 -I/usr/include/GL \
		 @SDL_CFLAGS@ \
		 @SDL_Mixer_CFLAGS@ \
		 @Freetype_CFLAGS@ \
		 @SOIL_CFLAGS@ \
		 -I./include
CFLAGS = -g -Wall -Wextra -std=c++0x $(starcom_CFLAGS) $(OPTFLAGS)

starcom_LIBS = -L/usr/local/lib \
		-L/opt/local/lib \
		@SDL_LIBS@ \
		@SDL_Mixer_LIBS@ \
		@Freetype_LIBS@
LIBS = $(starcom_LIBS) $(OPTLIBS)

LDLIBS = @GL_LINKER_FLAG@ -lSDL2 -lGLEW -lSOIL $(OPTLDLIBS)

# assemble the compiler command
CC = g++ $(CFLAGS) $(LIBS)

all: $(TARGET)

dev: build
	$(CC) $(wildcard src/*.cpp) \
	$(CFLAGS) $(LIBS) \
	-o $(TARGET) $(LDLIBS)

$(TARGET): build $(OBJECTS)
	$(CC) build/*.o -o $@ $(LDLIBS)

# Don't need to do this every time
$(OBJECTS):
	$(CC) -c src/$@.cpp -o build/$@.o

build:
	@mkdir -p build
	@mkdir -p bin

clean:
	rm -f $(TARGET)
	rm -f build/*

distclean: clean
	rm config.log config.status configure
	rm -r autom4te.cache aclocal.m4
	rm Makefile Tupfile

# http://astyle.sourceforge.net/astyle.html
style:
	@astyle --options=.astylerc \
	`ls src/*.h src/*.cpp tests/*.h tests/*.cpp`

# http://cppcheck.sourceforge.net/manual.html
lint:
	cppcheck --enable=all ./src

grind: all
	valgrind ./$(OBJ_NAME)

include tests/test.mk
